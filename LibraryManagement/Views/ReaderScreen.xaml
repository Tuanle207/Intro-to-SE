<UserControl           
             DataContext="{StaticResource ReaderViewModel}"
             x:Class="LibraryManagement.Views.ReaderScreen"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LibraryManagement.Views"
             xmlns:vm="clr-namespace:LibraryManagement.ViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="900" Background="#FFF0F0F0">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding CancelCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="9*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="SearchBox" Grid.Row="0" Grid.Column="0">
            <Grid Grid.Column="1" Background="Aqua" Margin="10" Height="Auto">
                <TextBlock Margin="10" Text="Nhập tên độc giả..." FontSize="16"
                    Foreground="#000"
                    Visibility="{Binding ElementName=tbReaderName, Path=Text.IsEmpty,
                              Converter={StaticResource BooleanToVisibilityConverter}}" />
                <TextBox Name="tbReaderName" Background="Transparent" Margin="10" FontSize="16" BorderBrush="Red" Text="{Binding ReaderSearchKeyword, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Grid>

        <materialDesign:Card Grid.Row="1" Grid.Column="0" Background="#abc2e8" Margin="10,10,10,20" BorderThickness="0" VerticalAlignment="Stretch">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ListView x:Name="ListDisplayReader" ItemsSource="{Binding List.Readers}"  SelectedItem="{Binding SelectedItem, Mode=TwoWay}" SelectionMode="Single" MouseDown="ListDisplayReader_MouseDown" >
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem IsEnabled="{Binding SelectedItem, Mode=OneWay, Converter={StaticResource SelectedItemToBoolean}}" Header="Gia hạn độc giả" Command="{Binding ExtendReaderCard}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="AccountClock" Width="Auto" Height="Auto"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem IsEnabled="{Binding SelectedItem, Mode=OneWay, Converter={StaticResource SelectedItemToBoolean}}" Header="Sửa thông tin" Click="CapnhatReader_Click">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="ContentDuplicate" Width="Auto" Height="Auto"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem IsEnabled="{Binding SelectedItem, Mode=OneWay, Converter={StaticResource SelectedItemToBoolean}}" Header="Xóa độc giả" Command="{Binding DeleteCommand}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="DeleteForever" Width="Auto" Height="Auto"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Id" DisplayMemberBinding="{Binding idReader }"></GridViewColumn>
                            <GridViewColumn Header="Họ tên" DisplayMemberBinding="{Binding nameReader}"></GridViewColumn>
                            <GridViewColumn Header="Ngày sinh" DisplayMemberBinding="{Binding dobReader}"></GridViewColumn>
                            <GridViewColumn Header="Email" DisplayMemberBinding="{Binding email}"></GridViewColumn>
                            <GridViewColumn Header="Địa chỉ" DisplayMemberBinding="{Binding addressReader}"></GridViewColumn>
                            <GridViewColumn Header="Ngày tạo thẻ" DisplayMemberBinding="{Binding createdAt,StringFormat='dd/MM/yyyy'}"></GridViewColumn>
                            <GridViewColumn Header="Số nợ" DisplayMemberBinding="{Binding debt}"></GridViewColumn>
                            <GridViewColumn Header="Loại người đọc" DisplayMemberBinding="{Binding TypeReader.nameTypeReader}"></GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </ScrollViewer>
        </materialDesign:Card>

        <StackPanel Margin="0 2 0 0" Orientation="Horizontal">
            <Button x:Name="btnPrev" Command="{Binding MoveToPreviousReadersPage}" Padding="10 0 10 2" Margin="220 0 20 0">&lt;</Button>
            <TextBlock Text="{Binding List.CurrentPage}"></TextBlock>
            <TextBlock>/</TextBlock>
            <TextBlock x:Name="btnNext" Text="{Binding List.PageCount}"></TextBlock>
            <Button Command="{Binding MoveToNextReadersPage}" Padding="10 0 10 2" Margin="20 0 0 0">&gt;</Button>
        </StackPanel>

        <Grid x:Name="gridForInfo" Grid.Column="1" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="6*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Label Content="Thông tin cơ bản" Grid.Row="0" FontWeight="Bold" FontStyle="Italic" Background="{x:Null}" Foreground="#DD000000" FontSize="22"/>
            <materialDesign:Card Grid.Row="1" Margin="15">
                <Grid x:Name="gridForNomalInfo" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" Margin="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="Họ tên" Background="{x:Null}" Foreground="#DD000000" FontSize="18"/>
                        <Label Grid.Row="1" Content="Địa chỉ" Background="{x:Null}" Foreground="#DD000000" FontSize="18"/>
                        <Label Grid.Row="2" Content="Email" Background="{x:Null}" Foreground="#DD000000" FontSize="18"/>
                        <Label Grid.Row="3" Content="Ngày sinh"  Background="{x:Null}" Foreground="#DD000000" FontSize="18"/>
                        <Label Grid.Row="4" Content="Ngày lập thẻ" Background="{x:Null}" Foreground="#DD000000" FontSize="18"/>
                    </Grid>
                    <Grid Grid.Column="1" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <TextBox x:Name="NameReader" IsReadOnly="True" Grid.Row="0" BorderThickness="1" VerticalAlignment="Center" Padding="5 0" Margin="1" FontSize="14">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="12"/>
                                </Style>
                            </TextBox.Resources>
                            <TextBox.Text>
                                <Binding Path="SelectedItem.nameReader" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vm:ReaderNameValidation/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox x:Name="Address" IsReadOnly="True" Grid.Row="1" BorderThickness="1" VerticalAlignment="Center" Padding="5 0" Margin="1" FontSize="14">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="12"/>
                                </Style>
                            </TextBox.Resources>
                            <TextBox.Text>
                                <Binding Path="SelectedItem.addressReader" UpdateSourceTrigger="PropertyChanged" >
                                    <Binding.ValidationRules>
                                        <vm:ReaderAddressValidation/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox x:Name="Email" IsReadOnly="True" Grid.Row="2" BorderThickness="1" VerticalAlignment="Center" Padding="5 0" Margin="1" FontSize="14">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="12"/>
                                </Style>
                            </TextBox.Resources>
                            <TextBox.Text>
                                <Binding Path="SelectedItem.email" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vm:ReaderEmailValidation/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <DatePicker x:Name="DobReader" IsEnabled="False" Grid.Row="3" BorderThickness="1" VerticalAlignment="Center" Padding="5 0" Margin="1" FontSize="14">
                            <DatePicker.SelectedDate>
                                <Binding Path="SelectedItem.dobReader" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vm:ReaderDOBValidation/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </DatePicker.SelectedDate>
                        </DatePicker>
                        <DatePicker x:Name="CreatAt" IsEnabled="False" Grid.Row="4" BorderThickness="1" VerticalAlignment="Center" Padding="5 0" Margin="1" FontSize="14" SelectedDate="{Binding SelectedItem.createdAt,  UpdateSourceTrigger=PropertyChanged, StringFormat='dd/MM/yyyy'}"/>

                    </Grid>
                </Grid>
            </materialDesign:Card>
            
            <Label Grid.Row="2" Content="Thông tin thẻ độc giả " HorizontalAlignment="Left" FontWeight="Bold" FontStyle="Italic" Background="{x:Null}" Foreground="#DD000000" FontSize="22"/>
            <Grid x:Name="gridForReaderProfile" Grid.Row="3" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="7*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Grid.Column="0" Margin="10" Content="Số nợ" Background="{x:Null}" Foreground="#DD000000" FontSize="18" VerticalAlignment="Center"/>
                <Label Grid.Row="1" Grid.Column="0" Margin="10" Content="Loại độc giả" Background="{x:Null}" Foreground="#DD000000" FontSize="18" VerticalAlignment="Center"/>
                <TextBox x:Name="Debt"  IsReadOnly="True" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Padding="5 0" BorderThickness="1" FontSize="20">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="15"/>
                        </Style>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="SelectedItem.debt" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <vm:ReaderDebtValidation/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <ComboBox x:Name="TypeReader" IsEnabled="False" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Padding="5" BorderThickness="1" BorderBrush="Black" FontSize="20" DisplayMemberPath="nameTypeReader" ItemsSource="{Binding TypeReader}" SelectedItem="{Binding SelectedItem.TypeReader, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"></ComboBox>

                <Button x:Name="CapnhatReader" Click="CapnhatReader_Click" Command="{Binding ReloadTypeReaderCommand}"  Visibility="Visible"  Height="Auto" Width="Auto" Grid.Column="3" Grid.Row="0" Background="#FFF39C11" BorderBrush="{x:Null}" HorizontalContentAlignment="Left" Margin="10">
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <materialDesign:PackIcon Kind="ContentDuplicate" Width="Auto" Height="Auto"/>
                        <TextBlock Text="Cập nhật" VerticalAlignment="Center" Margin="10" FontSize="15" FontWeight="Bold"/>
                    </StackPanel>
                </Button>

                <Button x:Name="LuuReader" Click="LuuReader_Click" Visibility="Hidden" Command="{Binding EditCommand}" Height="Auto" Width="Auto" Grid.Column="3" Grid.Row="0" Background="#FFF39C11" BorderBrush="{x:Null}" HorizontalContentAlignment="Left" Margin="10">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=NameReader, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=Email, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=Address, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=DobReader, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=CreatAt, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=Debt, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <materialDesign:PackIcon Kind="ContentDuplicate" Width="Auto" Height="Auto"/>
                        <TextBlock Text="Lưu" VerticalAlignment="Center" Margin="10" FontSize="20" FontWeight="Bold"/>
                    </StackPanel>
                </Button>
                <Button x:Name="btnDeleteReader" Command="{Binding DeleteCommand}" Height="Auto" Width="Auto" Grid.Column="3" Grid.Row="1" Background="#FFE6001F" BorderBrush="{x:Null}" HorizontalContentAlignment="Left" Margin="10">
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <materialDesign:PackIcon Kind="DeleteForever" Width="Auto" Height="Auto"/>
                        <TextBlock Text="Xóa thẻ" VerticalAlignment="Center" Margin="10" FontSize="15" FontWeight="Bold"/>
                    </StackPanel>
                </Button>
            </Grid>
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0"  Content="Thành viên" FontWeight="Bold" FontStyle="Italic" Background="{x:Null}" Foreground="#DD000000" FontSize="22"/>
                <Button x:Name="btnCancel" Click="btnCancel_Click" IsEnabled="False" Command="{Binding CancelCommand}" Grid.Column="1" Width="150" Content="Hủy bỏ"></Button>
            </Grid>
            
            <Grid Grid.Row="5" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="btnAddReader" Height="Auto" Width="Auto" Click="ButtonAddReader_Click" Command="{Binding PrepareAddReaderCommand}" Grid.Column="0" Background="#FFF39C11" BorderBrush="{x:Null}" HorizontalContentAlignment="Left" Margin="10 20 10 10">
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <materialDesign:PackIcon Kind="AccountMultiplePlus" Width="Auto" Height="Auto" VerticalAlignment="Center"/>
                        <TextBlock Text="Thêm độc giả" Margin="10" VerticalAlignment="Center" FontSize="18" FontWeight="Bold"/>
                    </StackPanel>
                </Button>
                <Button x:Name="btnTypeReader" Height="Auto" Width="Auto" Click="ButtonTypeReader_Click" Grid.Column="1" Background="Green" BorderBrush="{x:Null}" HorizontalContentAlignment="Left" Margin="5, 20, 10, 10">
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <materialDesign:PackIcon Kind="AccountMultiplePlus" Width="Auto" Height="Auto" VerticalAlignment="Center"/>
                        <TextBlock Text="Thêm loại độc giả" Margin="10" VerticalAlignment="Center" FontSize="18" FontWeight="Bold"/>
                    </StackPanel>
                </Button>

            </Grid>
        </Grid>
    </Grid>
</UserControl>
